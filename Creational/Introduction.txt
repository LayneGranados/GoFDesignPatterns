Creational Design Patterns

Creational Design Patterns are concerned with the way in which objects are created. They reduce complexities and instability by creating objects in a controlled manner.

The new operator is often considered harmful as it scatters objects all over the application. Over time it can become challenging to change an implementation because classes become tightly coupled.

Creational Design Patterns address this issue by decoupling the client entirely from the actual initialization process.

Design Patterns in this Repository:

	Abstract Factory: Allows for the creation of objects without specifying their concrete type.
	Builder: Used to create complex objects.
	Factory Method: Creates objects without specifying the exact class to create.
	Prototype: Creates a new object from an existing object.
	Singleton: Ensures only one instance of an object is created

References:
	http://www.baeldung.com/creational-design-patterns
	https://springframework.guru/gang-of-four-design-patterns/